
{% if http_port == 80 %}
server {
	server_name {{ client_domain }};

	listen 80;
{% endif %}

{% if http_port == 443 %} 
server {
	server_name www.{{ client_domain }}; 
	listen 80;
   	rewrite ^(.*)$ https://{{ client_domain }}$1 permanent;

}


server {
	server_name www.{{ client_domain }}; 
	listen 443 ssl;
	ssl_certificate     /opt/ui/keys/{{ client_domain }}.cert.pem;
    ssl_certificate_key /opt/ui/keys/{{ client_domain }}.key.pem;
    ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers         AES128-SHA:AES256-SHA:RC4-SHA:DES-CBC3-SHA:RC4-MD5;
	ssl_session_cache   shared:SSL:10m;
    ssl_session_timeout 10m;
	keepalive_timeout   70;
	add_header Strict-Transport-Security 'max-age=604800';
	
    rewrite ^(.*)$ https://{{ client_domain }}$1 permanent;
}



server {
	server_name {{ client_domain }}; 
	listen 80;
    rewrite ^(.*)$ https://{{ client_domain }}$1 permanent;

}


server {
	server_name {{ client_domain }}; 
	listen 443 ssl;
	ssl_certificate     /opt/ui/keys/{{ client_domain }}.cert.pem;
    ssl_certificate_key /opt/ui/keys/{{ client_domain }}.key.pem;
    ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers         AES128-SHA:AES256-SHA:RC4-SHA:DES-CBC3-SHA:RC4-MD5;
	ssl_session_cache   shared:SSL:10m;
    ssl_session_timeout 10m;
	keepalive_timeout   70;
	add_header Strict-Transport-Security 'max-age=604800';
	
{% endif %}

	location / {
		if (-f /opt/maintenance/maintenance.html) {
			return 503;
		}
		
		root /opt/ui/{{ client_domain }}/client;
		try_files $uri $uri/ /index.html =404;
	}
	
	location ~ ^/landing.*$ {
		if (-f /opt/maintenance/maintenance.html) {
			return 503;
		}
		root /opt/ui/{{ client_domain }};
		try_files $uri $uri/ /landing/index.html =404;
	}

	location /backend-client {
        proxy_pass http://tomcat-client:8080/backend-client;
        proxy_read_timeout 600;
        proxy_set_header 'Access-Control-Allow-Origin' '*';
		proxy_set_header 'Access-Control-Allow-Credentials' 'true';
		proxy_set_header 'Access-Control-Allow-Headers' 'Content-Type,Accept';
        proxy_set_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';

		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
		proxy_redirect off;
    }		
	
	location /graylog/gelf {
		if (-f /opt/maintenance/maintenance.html) {
                return 503;
        }
		
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_redirect off;
		proxy_http_version 1.1;
		proxy_set_header        X-Real-IP $remote_addr;
		proxy_set_header        X-Forwarded-Proto $scheme;
        proxy_set_header X-NginX-Proxy true;
 
        rewrite ^/graylog/gelf/?(.*) /gelf$1 break;
 
        proxy_pass http://graylog:12203/gelf;
        proxy_redirect off;
    }
	
	error_page 503 @maintenance;
    
    location @maintenance {
        rewrite ^(.*)$ /error503.html break;
    }

	# redirect server error pages to the static page /50x.html
	#
	#error_page 500 502 503 504 /50x.html;
	location = /50x.html {
		root /opt/maintenance/html_base/;
	}
}
